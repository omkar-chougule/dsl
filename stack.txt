
#include <iostream>
using namespace std;
#define l 20
class stack1
{
public:
    char arr[l];
    int top;
    stack1()
    {
        top = -1;
    }
    int empty()
    {
        if (top == -1)
            return 1;
        else
            return 0;
    }
    int full()
    {
        if (top == l - 1)
            return 1;
        else
            return 0;
    }
    void push(char a)
    {
        if (full() == 0)
        {
            top++;
            arr[top] = a;
        }
    }
    char pop()
    {
        if (!empty())
        {
            char b = arr[top];
            top--;
            return b;
        }
        else
            return 0;
    }
    void code()
    {
        int flag = 0;
        cout << "ENTER YOUR EXPRESSION:" << endl;
        ;
        cin.ignore();
        cin.get(arr, 20);
        for (int i = 0; arr[i] != '\0'; i++)
        {
            if (arr[i] == '(' || arr[i] == '{' || arr[i] == '[')
                push(arr[i]);
            if (arr[i] == ')' || arr[i] == '}' || arr[i] == ']')
            {
                char c = pop();
                if ((arr[i] == ')' && c != '(') || (arr[i] == '}' && c != '{') || (arr[i] == ']' && c != '['))
                {
                    cout << "NOT WELL PARANTHESIZED " << endl;
                    flag = 1;
                    break;
                }
            }
        }
        if (empty() == 1 && flag == 0)
            cout << "BALANCED EXPRESSION" << endl;
        else
            cout << "UNBALANCED EXPRESSION" << endl;
    }
    void display()
    {
        if (empty() == 1)
            cout << "STACK IS EMPTY" << endl;
        else
        {
            for (int i = 0; i < l; i++)
                cout << arr[i];
        }
    }
};
int main()
{
    stack1 obj;
    int arr = 1;
    while (arr == 1)
    {
        cout << "PRESS1:IF YOU WANT TO PERFORM THE EXPRESSION:\nPRESS2:TO EXIT "<<endl;
                cin >>
            arr;
        switch (arr)
        {
        case 1:
            obj.code();
            break;
        case 2:
            break;
        default:
            cout << "INVALID INPUT";
            break;
        }
        if (arr != 1)
            break;
    }
}
